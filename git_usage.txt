#init a local git
git init
git status

#add changes to temp
git add filename.txt
#submmit changes to respor
git commit -m "Description about the changes."
#view the log
git log  /git log --pretty=oneline  / git reflog

#For commit has finished!
#reset changes  ONE 
git reset --hard HEAD^   / git reset --hard "commit id"
#reset changes  TWO
git reset --hard HEAD^^
#reset changes  100
git reset --hard HEAD~100

#compare the difference between respository and local working directory
git diff HEAD -- filename.txt
#compare changes locally
git diff <filename>
#cancel a changes in working directory
git checkout -- <filename>


#remote GitHub usage:
git remote add origin https://github.com/leven03/WmCaeNet.git
git push -u origin master (first using)
git push origin master

#branch usage:
#view
git branch
#create
git branch <name>
#switch
git checkout <name>
#create and switch
git checkout -b <name>
#merge a branch to the brach
git merge <name>
#delete
git branch -d <name>
#force delete
git branch -D <name>

#delete remote branch
#view branch: git branch -a
git push origin --delete dev

#view branch merge graph
git log --graph --pretty=oneline --abbrev-commit 

#save working directory
git stash
#recover from stash
git stash pop / git stash list / git stash apply / git stash drop stash@{0}


#mutil people cooperation
#push own changes
git push origin <bransh-name>
git pull
#git pull hint:no tracking information/establish link to remote and local
git branch --set-upstream-to <branch-name> origin/<branch-name>
#create local branch about remote branch
git checkout -b <branch-name> origin/<branch-name>

#Add tag usage
git tag <tagname> / git tag <tagname> <commit id> / tag :v1.0
#add tag information
git tag -a <tagname> -m "<information>"
git tag show <tagname>
git tag

##tag operation
#push a local tag to remote
git push origin <tagname>
#push all tag
git push oririn --tags
#del local tag
git tag -d <tagname>
#delete remote tag
#git push origin :refs/tags/<tagname>

###configure alias
git config --global alias.st status
git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.br branch

#git ci -m "bala bala bala..." == git commit -m "bala bala..."

#git reset HEAD <filename> == git unstage <filename>
git config --global alias.unstage 'reset HEAD'

#git last
git config --global alias.last 'log -1'

#git lg
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

#delete alias in ~/.gitconfig



